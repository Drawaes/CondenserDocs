@{
	Layout = "/_Layout.cshtml";
}

@section Sidebar {
    <li class="header"><i class="fa fa-bookmark"></i> Categories</li>    
    @foreach(string category in Documents[DocsPipelines.BlogPosts]
        .Select(x => x.String(DocsKeys.Category))
        .Distinct()
        .OrderBy(x => x))
    {
        string link = category.ToLower().Replace(" ", "-").Replace("'", string.Empty);
        string selected = Model.String(Keys.RelativeFilePath).StartsWith($"blog/{link}/") ? "selected" : null;
        <li class="@selected"><a href="/blog/@(link)">@category</a></li>
    }
    
    <li class="header"><i class="fa fa-calendar"></i> Archive</li>    
    @foreach(DateTime published in Documents[DocsPipelines.BlogPosts]
        .Select(x => x.Get<DateTime>(DocsKeys.Published))
        .Select(x => new DateTime(x.Year, x.Month, 1))
        .Distinct()
        .OrderByDescending(x => x))
    {
        string link = published.ToString("yyyy/MM");
        string selected = Model.String(Keys.RelativeFilePath).StartsWith($"blog/archive/{link}/") ? "selected" : null;
        <li class="@selected"><a href="/blog/archive/@(link)">@(published.ToString("MMMM, yyyy"))</a></li>
    }
    
    <li class="header"><i class="fa fa-user"></i> Authors</li>    
    @foreach(string author in Documents[DocsPipelines.BlogPosts]
        .Select(x => x.String(DocsKeys.Author))
        .Distinct()
        .OrderBy(x => x))
    {
        string link = author.ToLower().Replace(" ", "-").Replace("'", string.Empty);
        string selected = Model.String(Keys.RelativeFilePath).StartsWith($"blog/author/{link}/") ? "selected" : null;
        <li class="@selected"><a href="/blog/author/@(link)">@author</a></li>
    }
}

@RenderBody()
